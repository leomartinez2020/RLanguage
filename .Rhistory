machos <- heights %>% filter(sex == "Male") %>% ggplot(aes(x=heights))
machos <- heights %>% filter(sex == "Male") %>% ggplot(aes(x=height))
machos + geom_histogram()
machos + geom_histogram(binwidth = 1)
machos + geom_histogram(binwidth = 1, fill = "blue", col="black")
machos + geom_histogram(binwidth = 1, fill = "blue", col="black") +
xlab("X height in inches") +
ggtitle("My Histogram")
machos + geom_density()
machos + geom_density(fill = "yellow")
machos + ggplot(aes(sample = height)
geom_qq()
machos %>% ggplot(aes(sample = height)
geom_qq()
machos %>% ggplot(aes(sample = height)) + geom_qq()
machos %>% ggplot(aes(sample = height))
p <- heights %>% filter(sex="Male") %>%
ggplot(aes(sample = height))
p <- heights %>% filter(sex=="Male") %>%
ggplot(aes(sample = height))
p + geom_qq()
library(dplyr)
library(ggplot2)
library(ggthemes)
library(ggrepel)
misdatos <- read.csv('df_murders2017.csv')
head(misdatos)
r <- misdatos %>%
summarize(rate=sum(Homicidios) / sum(Poblacion)) %>% .$rate
k <- misdatos %>% ggplot(aes(Poblacion, Homicidios, label = abb)) +
geom_abline(slope = r, lty=2, color='darkgrey') +
geom_point(aes(col = Región), size=3) +
#geom_text(nudge_x = 100000, nudge_y = 90) +
geom_text_repel() +
xlab("Población por departamento") +
ylab("Número de homicidios") +
ggtitle("Homicidios en Colombia en 2017") +
theme_economist()
k
dir()
getwd()
dir('erre.Rproj/')
setwd('/home/lowenhard/IrizarriCourse/')
getwd()
dir()
dany <- read.csv('femaleMiceWeights.csv')
View(dany)
control <- filter(dany, Diet == 'chow')
control
select(control, Bodyweight)
koko <- select(control, Bodyweight)
unlist(koko)
papa <- filter(dany, Diet == 'chow') %>% select(Bodyweight)
papa
papa <- filter(dany, Diet == 'chow') %>% select(Bodyweight) %>% unlist()
papa
papa <- filter(dany, Diet == 'chow') %>% select(Bodyweight) %>% unlist
papa
library(downloader)
install.packages('downloader')
library(downloader)
url <- 'https://raw.githubusercontent.com/genomicsclass/dagdata/master/inst/extdata/msleep_ggplot2.csv'
filename <- basename(url)
download(url, filename)
head(msleep)
dir()
dormir <- read.csv('msleep_ggplot2.csv')
head(dormir)
class(dormir)
nrow(dormir)
View(dormir)
primos <- filter(order=='Primates')
primos <- filter(dormir, order=='Primates')
primos
nrow
nrow(primos)
class(primos)
esleep <- filter(dormir, order=='Primates') %>% select(sleep_total)
esleep
class(esleep)
esleep %>% unlist %>% mean
?summarize
esleep % summarise(prom = mean)
esleep % summarise(mean)
esleep %>% summarise(mean)
esleep %>% summarise(prom = mean)
esleep %>% summarize()
esleep %>% summarize(mean())
esleep %>% summarize(mean
)
summarise(esleep, mean)
esleep
summarise(esleep, mean(sleep_total))
summarise(esleep, prom=mean(sleep_total))
grupo_control <- filter(dany, Diet=='chow') %>% select(Bodyweight) %>% unlist()
grupo_control
tratamiento  <- filter(dany, Diet=='ft') %>% select(Bodyweight) %>% unlist
tratamiento
head(dany)
dany$Diet
tratamiento  <- filter(dany, Diet=='hf') %>% select(Bodyweight) %>% unlist
tratamiento
grupo_control
mean(grupo_control)
mean(tratamiento)
dir()
dir()
dir()
poblacion <- read.csv('femaleControlsPopulation.csv')
dim(poblacion)
mean(poblacion)
mean(unlist(poblacion))
mean(grupo_control)
muestra <- sample(poblacion, 12)
poblacion <- unlist(poblacion)
muestra <- sample(poblacion, 12)
mean(muestra)
mean(grupo_control)
muestra <- sample(poblacion, 12)
mean(muestra)
pobl
poblacion
mean(poblacion)
pp <- mean(poblacion)
sample(poblacion, 5)
set.seed(1)
ss <- sample(poblacion, 5)
ss
mean(ss)
abs(mean(ss) - pp)
set.seed(5)
ss <- sample(poblacion, 5)
abs(mean(ss) - pp)
mean(grupo_control)
mean(muestra)
mean(grupo_control) - mean(muestra)
kontrol <- filter(dany, Diet='chow')
kontrol <- filter(dany, Diet=='chow')
traktamiento <- filter(dany, Diet=='hf')
kontrol
kontrol <- unlist(Bodyweight)
kontrol <- select(Bodyweight) %>% unlist
kontrol <- kontrol %>% select(Bodyweight) %>% unlist
kontrol
traktamiento <- traktamiento %>% select(Bodyweight) %>% unlist
mean(kontrol)
mean(traktamiento)
mean(traktamiento) - mean(kontrol)
obs <- mean(traktamiento) - mean(kontrol)
dim(dany)
poblacion
conto1 <- sample(poblacion, 12)
tacta1 <- sample(poblacion, 12)
conto1
unname(conto1)
D <- matrix(unname(sample(poblacion, 12)), nrow = 1, ncol = 12)
D
rbind(D, unname(sample(poblacion, 12)))
D
D <- rbind(D, unname(sample(poblacion, 12)))
D
D <- rbind(D, unname(sample(poblacion, 12)))
D
mean(D)
as.table(D)
dk <- as.table(D)
mean(dk)
as.data.frame(dk)
as.data.frame(D)
daf <- as.data.frame(D)
mean(daf)
mean(daf,)
mean(daf[1,])
daf[1,]
rowMeans(daf)
rms <- rowMeans(daf)
class(rms)
rms - 3
D <- rbind(D, unname(sample(poblacion, 12)))
D
foo <- function(mtrx) {for (i in 1:100) {rbind(mtrx, unname(sample(poblacion, 12)))};mtrx}
D <- matrix(unname(sample(poblacion, 12)), nrow = 1, ncol = 12)
kod <- foo(D)
dim(kod)
kod
foo <- function(mtrx) {for (i in 1:100) {mtrx <- rbind(mtrx, unname(sample(poblacion, 12)))};mtrx}
kod <- foo(D)
dim(kod)
kod
D <- matrix(unname(sample(poblacion, 12)), nrow = 1, ncol = 12)
kod <- foo(D)
dim(kod)
foo <- function(mtrx) {for (i in 1:99) {mtrx <- rbind(mtrx, unname(sample(poblacion, 12)))};mtrx}
D <- matrix(unname(sample(poblacion, 12)), nrow = 1, ncol = 12)
kod <- foo(D)
dim(kod)
rowMeans(kod)
proms1 <- rowMeans(kod)
D <- matrix(unname(sample(poblacion, 12)), nrow = 1, ncol = 12)
pod <- foo(D)
proms2 <- rowMeans(pod)
proms1 - proms2
valores <- proms1 - proms2
hist(valores)
max(valores)
min(valores)
foo <- function(mtrx) {for (i in 1:999) {mtrx <- rbind(mtrx, unname(sample(poblacion, 12)))};mtrx}
D <- matrix(unname(sample(poblacion, 12)), nrow = 1, ncol = 12)
pod <- foo(D)
D <- matrix(unname(sample(poblacion, 12)), nrow = 1, ncol = 12)
kod <- foo(D)
proms2 <- rowMeans(pod)
proms1 <- rowMeans(kod)
valores <- proms1 - proms2
hist(valores)
max(valores)
min(valores)
obs <- mean(traktamiento) - mean(kontrol)
obs
sum(valores > obs)
sum(valores > obs) / length(valores)
mean(valores > obs)
mean(abs(valores) > obs)
nuevo <- heights %>% filter(sex='Male')
nuevo <- heights %>% filter(sex=='Male')
soso <- nuevo %>% summarise(promedio=mean(height))
soso
soso <- nuevo %>% summarise(promedio=mean(height), des_estandar=sd(height))
soso
soso <- nuevo %>% summarise(promedio=mean(height), des_estandar=sd(height), minimo=min(height), maximo=max(height))
soso
soso$maximo
dir()
dany
poblacion
dim(poblacion)
length(poblacion)
cont <- vector('numeric', 10)
n <- 10
for (1 in 1:n) {cont[i] = sample(poblacion, 1)}
for (i in 1:n) {cont[i] = sample(poblacion, 1)}
cont
mean(cont)
population <- read.csv('femaleControlsPopulation.csv')
population <- unlist(population)
n <- 10
contenedor <- vector('numeric', n)
for (i in 1:n) {
muestra1 <- sample(population, 5)
muestra2 <- sample(population, 5)
contenedor[i] <- mean(muestra1) - mean(muestra2)
}
contenedor
hist(contenedor)
n <- 100
contenedor <- vector('numeric', n)
for (i in 1:n) {
muestra1 <- sample(population, 5)
muestra2 <- sample(population, 5)
contenedor[i] <- mean(muestra1) - mean(muestra2)
}
hist(contenedor)
k1 <- heights %>% filter(Diet=='chow') %>% select(Bodyweight) %>% unlist
losdatos <- read.csv('femaleMiceWeights.csv')
k1 <- losdatos %>% filter(Diet=='chow') %>% select(Bodyweight) %>% unlist
t1 <- losdatos %>% filter(Diet=='hf') %>% select(Bodyweight) %>% unlist
obs <- mean(t1) - mean(k1)
obs
mean(contenedor > obs)
mean(abs(contenedor) > obs)
n <- 100
contenedor <- vector('numeric', n)
for (i in 1:n) {
muestra1 <- sample(population, 5)
muestra2 <- sample(population, 5)
contenedor[i] <- mean(muestra1) - mean(muestra2)
}
mean(abs(contenedor) > obs)
promm <- mean(population)
promm
mean(abs(contenedor) > promm)
contenedor
mean(abs(contenedor) > promm + 1)
contenedor[i] <- mean(muestra1) #- mean(muestra2)
for (i in 1:n) {
muestra1 <- sample(population, 5)
#muestra2 <- sample(population, 5)
contenedor[i] <- mean(muestra1) #- mean(muestra2)
}
promm <- mean(population)
promm
mean(abs(contenedor) > promm + 1)
set.seed(1)
n <- 1000
contenedor <- vector('numeric', n)
for (i in 1:n) {
muestra1 <- sample(population, 5)
#muestra2 <- sample(population, 5)
contenedor[i] <- mean(muestra1) #- mean(muestra2)
}
promm <- mean(population)
promm
mean(abs(contenedor) > promm + 1)
mean(contenedor > promm + 1)
mean(contenedor > promm + 1 | contenedor < promm - 1)
set.seed(1)
n <- 1000
contenedor <- vector('numeric', n)
for (i in 1:n) {
muestra1 <- sample(population, 5)
#muestra2 <- sample(population, 5)
contenedor[i] <- mean(muestra1) #- mean(muestra2)
}
promm <- mean(population)
promm
mean(contenedor > promm + 1 | contenedor < promm - 1)
set.seed(1)
n <- 10000
contenedor <- vector('numeric', n)
for (i in 1:n) {
muestra1 <- sample(population, 5)
#muestra2 <- sample(population, 5)
contenedor[i] <- mean(muestra1) #- mean(muestra2)
}
promm <- mean(population)
promm
mean(contenedor > promm + 1 | contenedor < promm - 1)
set.seed(1)
n <- 1000
contenedor <- vector('numeric', n)
for (i in 1:n) {
muestra1 <- sample(population, 50)
#muestra2 <- sample(population, 50)
contenedor[i] <- mean(muestra1) #- mean(muestra2)
}
promm <- mean(population)
promm
mean(contenedor > promm + 1 | contenedor < promm - 1)
install.packages('gapminder')
library(gapminder)
data("gapminder")
head(gapminder)
expectativa <- gapminder$lifeExp
length(expectativa)
hist(expectativa)
gapminder %>% filter(year==1952)
expectativa <- gapminder %>% filter(year==1952)
hist(expectativa)
year52 <- expectativa$lifeExp
hist(expectativa)
hist(year52)
year52 %>% ggplot() + geom_histogram(binwidth = 1)
year52 %>% ggplot(aes(lifeExp)) + geom_histogram(binwidth = 1)
expectativa %>% ggplot(aes(lifeExp)) + geom_histogram(binwidth = 1)
expectativa %>% ggplot(aes(lifeExp)) + geom_histogram(binwidth = 2)
expectativa %>% ggplot(aes(lifeExp)) + geom_histogram(binwidth = 1)
hist(year52)
year52
year52[year52 <= 40]
length(year52[year52 <= 40]) / length(year52)
year52[year52 >= 40 & year52 <= 60]
len(year52[year52 >= 40 & year52 <= 60]) / length(year52)
length(year52[year52 >= 40 & year52 <= 60]) / length(year52)
mean(year52[year52 >= 40 & year52 <= 60])
mean(year52 >= 40 & year52 <= 60)
mybar <- function(x, q) {mean(x <= q)}
mybar(year52, 40)
mean(year52 <= 40)
qs <- seq(from=min(year52), to=max(year52))
qs <- seq(from=min(year52), to=max(year52), length = 20)
qs
mybar <- function(q) {mean(x <= q)}
sapply(qs, mybar)
mybar <- function(q) {mean(year52 <= q)}
sapply(qs, mybar)
ye <- sapply(qs, mybar)
plot(qs, ye)
plot(ecdf(year52))
lafunc <- function(iteraciones, ksamples) {
set.seed(1)
contenedor <- vector('numeric', iteraciones)
for (i in 1:iteraciones) {
muestra1 <- sample(population, ksamples)
contenedor[i] <- mean(muestra1)
}
contenedor
}
lafunc(10, 5)
primero <- lafunc(1000, 5)
segundo <- lafunc(1000, 50)
hist(primero)
hist(segundo)
hist(primero)
hist(segundo)
hist(primero)
par(mfrow=c(2,1))
hist(primero)
par(mfrow=c(1,2))
hist(primero)
hist(segundo)
par(mfrow=c(2,2))
hist(primero)
hist(segundo)
density(primero)
plot(density(primero))
plot(density(segundo))
mybar
segundo
mean(segundo >= 23 & segundo <= 25)
rnorm(mean = 23.9, sd = 0.43)
?rnorm
length(segundo)
distnorm <- rnorm(1000,mean = 23.9, sd = 0.43)
mean(distnorm >= 23 & distnorm <= 25)
dir()
datos <- read.csv('mice_pheno.csv')
head(datos)
datos <- na.omit(datos)
x <- datos
x <- datos %>% filter(Sex=='Male')
x
head(datos)
x <- datos %>% filter(Sex=='Male')
x
x <- datos %>% filter(Sex=='M')
x
x <- datos %>% filter(Sex=='M') %>% filter(Diet=='chow')
x
head(x)
x <- datos %>% filter(Sex=='M') %>% filter(Diet=='chow') %>% select(Bodyweight)
x
head(x)
mean(x)
mean(x$Bodyweight)
install.packages('rafalib')
library(rafalib)
popsd(datos)
head(datos)
popsd(x)
popsd(x$Bodyweight)
popsd(datos$Bodyweight)
set.seed(1)
x
set.seed(1)
mean(sample(x, 25))
set.seed(1)
mean(sample(x$Bodyweight, 25))
gordos <- datos %>% filter(Sex=='M') %>% filter(Diet=='chow') %>% select(Bodyweight) %>% unlist
gordos
mean(gordos)
gordos <- datos %>% filter(Sex=='M') %>% filter(Diet=='hf') %>% select(Bodyweight) %>% unlist
mean(gordos)
popsd(gordos)
set.seed(1)
mean(sample(gordos, 25))
flacos <- datos %>% filter(Sex=='M') %>% filter(Diet=='chow') %>% select(Bodyweight) %>% unlist
set.seed(1)
gg <- mean(sample(gordos, 25))
ff <- mean(sample(flacos, 25))
set.seed(1)
ff <- mean(sample(flacos, 25))
diffura <- (ff - gg) - (mean(flacos) - mean(gordos))
diffura
gordas <- datos %>% filter(Sex=='F') %>% filter(Diet=='hf') %>% select(Bodyweight) %>% unlist
flacas <- datos %>% filter(Sex=='F') %>% filter(Diet=='chow') %>% select(Bodyweight) %>% unlist
ff <- mean(sample(flacas, 25))
gg <- mean(sample(gordas, 25))
set.seed(1)
ff <- mean(sample(flacas, 25))
set.seed(1)
gg <- mean(sample(gordas, 25))
diffura <- (ff - gg) - (mean(flacas) - mean(gordas))
diffura
flacos <- datos %>% filter(Sex=='M') %>% filter(Diet=='chow') %>% select(Bodyweight) %>% unlist
estdar <- popsd(flacos)
media <- mean(flacos)
uno <- media + estdar
dos <- media - estdar
mean(flacos >= dos & flacos <= uno)
mean(flacos >= dos - estdar & flacos <= uno+estdar)
mean(flacos >= dos - 2*estdar & flacos <= uno+2*estdar)
dir()
dat <- read.csv('mice_pheno.csv')
y <- filter(dat, Sex=="M" & Diet=="chow") %>% select(Bodyweight) %>% unlist
avgs <- replicate(10000, mean( sample(y, 25)))
mypar(1,2)
hist(avgs)
qqnorm(avgs)
qqline(avgs)
avgs
mean(avgs)
head(avgs)
poko <- na.omit(avgs)
mean(poko)
sd
sd(poko)
wtrat <- filter(dat, Diet=="hf") %>% select(Bodyweight) %>% unlist
wcont <- filter(dat, Diet=="chow") %>% select(Bodyweight) %>% unlist
N <- length(wtrat)
obs <- mean(wtrat) - mean(wcont)
obs
wtrat
is.na(wtrat)
sum(is.na(wtrat))
sum(is.na(wcont))
wtrat <- na.omit(wtrat)
wcont <- na.omit(wcont)
N <- length(wtrat)
obs <- mean(wtrat) - mean(wcont)
se <- sqrt
se <- sqrt(var(wtrat)/N + var(wcont)/N)
tstat <- obs / se
